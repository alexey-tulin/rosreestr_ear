
package ru.rosreestr.client.isur;

import ru.rosreestr.context.ApplicationContextProvider;
import ru.rosreestr.handler.LoggerHandler;
import ru.rosreestr.handler.SignatureHandler;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import javax.xml.ws.handler.Handler;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "Service", targetNamespace = "http://asguf.mos.ru/rkis_gu/coordinate/v5/")
public class ServiceClient extends Service {
    private final static QName SERVICE_QNAME = new QName("http://asguf.mos.ru/rkis_gu/coordinate/v5/", "Service");

    private final SignatureHandler signatureHandler;
    private final LoggerHandler loggerHandler;

    public ServiceClient(URL wsdlLocation) {
        super(wsdlLocation, SERVICE_QNAME);
        signatureHandler = (SignatureHandler) ApplicationContextProvider.getApplicationContext().getBean("isurSignatureHandler");
        loggerHandler = (LoggerHandler) ApplicationContextProvider.getApplicationContext().getBean("isurLoggerHandler");
    }


    /**
     * @return returns IService
     */
    @WebEndpoint(name = "CustomBinding_IService")
    public IService getCustomBindingIService() {
        IService customBindingIService = super.getPort(new QName("http://asguf.mos.ru/rkis_gu/coordinate/v5/", "CustomBinding_IService"), IService.class);
        Binding binding = ((BindingProvider) customBindingIService).getBinding();
        List<Handler> handlers = binding.getHandlerChain();
        if (handlers == null) {
            handlers = new ArrayList<Handler>();
        }
        handlers.add(signatureHandler);
        handlers.add(loggerHandler);
        binding.setHandlerChain(handlers);
        return customBindingIService;
    }

    /**
     * @param features A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns IService
     */
    @WebEndpoint(name = "CustomBinding_IService")
    public IService getCustomBindingIService(WebServiceFeature... features) {
        IService customBindingIService = super.getPort(new QName("http://asguf.mos.ru/rkis_gu/coordinate/v5/", "CustomBinding_IService"), IService.class, features);
        List<Handler> handlers = ((BindingProvider) customBindingIService).getBinding().getHandlerChain();
        if (handlers == null) {
            handlers = new ArrayList<Handler>();
        }
        handlers.add(signatureHandler);
        handlers.add(loggerHandler);
        ((BindingProvider) customBindingIService).getBinding().setHandlerChain(handlers);
        return customBindingIService;
    }
}
